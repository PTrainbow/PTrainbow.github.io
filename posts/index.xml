<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 北邙山之光的 Blog</title>
        <link>http://PTrainbow.github.io/posts/</link>
        <description>所有文章 | 北邙山之光的 Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 01 Sep 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://PTrainbow.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>转到 AI 项目</title>
    <link>http://PTrainbow.github.io/posts/2025-09-01-%E8%BD%AC%E5%88%B0-AI-%E9%A1%B9%E7%9B%AE/</link>
    <pubDate>Mon, 01 Sep 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/2025-09-01-%E8%BD%AC%E5%88%B0-AI-%E9%A1%B9%E7%9B%AE/</guid>
    <description><![CDATA[<h2 id="开头的碎碎念">开头的碎碎念</h2>
<p>刚入职公司的时候，风风火火的搞了半年多的 KMP(Kotlin Multiplatform)，学到了非常多东西：LLVM、KSP(Kotlin Symbol Processor)、KCP(Kotlin Compiler Plugin)、 Kotlin IR 和 FIR、iOS Framework、后来为了搞 iOS 在 KMP 侧的热修还学了点 OC(Objective-C) 语法···</p>]]></description>
</item><item>
    <title>无感而发</title>
    <link>http://PTrainbow.github.io/posts/2025-08-22-%E6%97%A0%E6%84%9F%E8%80%8C%E5%8F%91/</link>
    <pubDate>Fri, 22 Aug 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/2025-08-22-%E6%97%A0%E6%84%9F%E8%80%8C%E5%8F%91/</guid>
    <description><![CDATA[<p>对于我的朋友们，我总是问什么说什么</p>
<p>以前，我遇到过两个同事，他们的口吻十分相似。他们会问我一些敏感的问题或者技术核心的问题，我基本都是倾囊相授。然而，身份互换以后，我基本得到不任何有用的信息。这两个同事让我开始对别人有所保留(但是几乎也没啥保留···)，但是那些无关紧要的、不敏感的东西，似乎也无所谓</p>]]></description>
</item><item>
    <title>KCP 开发</title>
    <link>http://PTrainbow.github.io/posts/2025-07-09-KCP/</link>
    <pubDate>Wed, 09 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/2025-07-09-KCP/</guid>
    <description><![CDATA[<p>最近，一直在搞 kmp(Kotlin Multiplatform)，这个框架出发点倒还可以，可以实现一码多端</p>
<p>但是，路漫漫其修远兮，感觉就是在用 kotlin 写 c</p>
<p>各种提效工具比较落后，文档比较稀少，需要自己去研究(国内大厂：研究 + 魔改 = 自研 = 世界领先)</p>]]></description>
</item><item>
    <title>Android Studio Plugin 开发</title>
    <link>http://PTrainbow.github.io/posts/Android-Studio-Plugin-%E5%BC%80%E5%8F%91/</link>
    <pubDate>Mon, 30 Jun 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/Android-Studio-Plugin-%E5%BC%80%E5%8F%91/</guid>
    <description><![CDATA[<h2 id="背景">背景</h2>
<p>最近，在搞 kmp 工程化的一些东西，因为官方不支持 ohos，所以其对应的 android studio plugin 也不支持 ohos</p>
<p>比如：创建一个 module 等等，都不会自动携带 ohos 目录</p>
<p>看了 kuikly 提供了一个 project 模板，但是没有提供 new module 的模板，所以，开始研究有关 new module 的插件开发</p>]]></description>
</item><item>
    <title>Kotlin Native 部分枚举类型导出后消失</title>
    <link>http://PTrainbow.github.io/posts/Kotlin-Native-%E9%83%A8%E5%88%86%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E5%AF%BC%E5%87%BA%E5%90%8E%E6%B6%88%E5%A4%B1/</link>
    <pubDate>Thu, 12 Jun 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/Kotlin-Native-%E9%83%A8%E5%88%86%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E5%AF%BC%E5%87%BA%E5%90%8E%E6%B6%88%E5%A4%B1/</guid>
    <description><![CDATA[<h2 id="背景">背景</h2>
<p>最近，腾讯 kuikly 开源了自己的 kotlin 编译器，支持了鸿蒙平台</p>
<p>查看了一些他们的源码后，发现，他们做的一些优化和适配比较有借鉴意义。其中，符号导出、字符串优化 和 鸿蒙平台的 ndk 适配这块，最值得学习</p>]]></description>
</item><item>
    <title>Kotlin Native OHOS ASAN 适配</title>
    <link>http://PTrainbow.github.io/posts/Kotlin-Native-OHOS-ASAN-%E9%80%82%E9%85%8D/</link>
    <pubDate>Tue, 03 Jun 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/Kotlin-Native-OHOS-ASAN-%E9%80%82%E9%85%8D/</guid>
    <description><![CDATA[<p>本文主要介绍如何让 kotlin/native 在适配了鸿蒙平台后，开启 asan 功能(kotlin 版本基于 2.0.21)</p>
<h2 id="asan-简介">ASAN 简介</h2>
<p>ASAN（Address Sanitizer）是针对 C/C++ 的快速内存错误检测工具，在运行时检测 C/C++ 代码中的多种内存错误</p>]]></description>
</item><item>
    <title>KSP For OHOS NAPI</title>
    <link>http://PTrainbow.github.io/posts/2025-04-08-KSP/</link>
    <pubDate>Tue, 08 Apr 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/2025-04-08-KSP/</guid>
    <description><![CDATA[<p>kotlin/native 适配鸿蒙，除了编译器方面的修改之外，还有比较重要的一部分就是 napi 代码的自动生成了</p>
<p>kotlin/native 和 napi 的关系：</p>
<blockquote>
<p>kotlin/native 实际产物就是对应平台二进制，在 ohos 上就是 linux elf<br>
ohos 上层应用使用 arkts 开发，想调用 so 中的方法，有一层类似 jni 的机制，其实就是 nodejs 的 napi 机制<br>
所以，想从 arkts 调用 kotlin/native 的代码，其实就是要自己写一层 napi</p>]]></description>
</item><item>
    <title>Kotlin Native 梳理</title>
    <link>http://PTrainbow.github.io/posts/Kotlin-Native-%E6%A2%B3%E7%90%86/</link>
    <pubDate>Fri, 28 Mar 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/Kotlin-Native-%E6%A2%B3%E7%90%86/</guid>
    <description><![CDATA[<p>最近在 kotlin/native 上适配鸿蒙，感觉坑很多。而且 kotlin/native 相当于用 kotlin 写 c/c++，出现内存问题，一样挠头</p>
<p>其次，kotlin/native 因为要适配 iOS 的 platform，和 xcode 绑定的也很死，同时自己又和 llvm 绑定的很死，编译的时候有各种问题，比如 kotlin 1.9.x 没法和 xcode16 一起使用···</p>]]></description>
</item><item>
    <title>2024提前总结</title>
    <link>http://PTrainbow.github.io/posts/2024%E6%8F%90%E5%89%8D%E6%80%BB%E7%BB%93/</link>
    <pubDate>Fri, 22 Nov 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/2024%E6%8F%90%E5%89%8D%E6%80%BB%E7%BB%93/</guid>
    <description><![CDATA[<p>为什么选这个奇怪的时间写下这篇文章呢？因为我终于确定了一个 offer 了！（当然后续可能也有幺蛾子，比如小米 offer call 以后，又说没有 hc，雷总···你们招人也太奇怪了···）。然后，这段时间的经历实在让我脑壳子嗡嗡的，又做了一次人生的错误决定来到传说中的宇宙条，不过人生的魔抗叠厚了不少···</p>]]></description>
</item><item>
    <title>ASM 和 JVM 关联知识</title>
    <link>http://PTrainbow.github.io/posts/ASM-%E5%92%8C-JVM-%E5%85%B3%E8%81%94%E7%9F%A5%E8%AF%86/</link>
    <pubDate>Sun, 21 Jul 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/ASM-%E5%92%8C-JVM-%E5%85%B3%E8%81%94%E7%9F%A5%E8%AF%86/</guid>
    <description><![CDATA[<h2 id="背景">背景</h2>
<p>最近做日志治理(其实也没啥治理的)，发现日志存活时间很短，因为各个业务方的日志汇总在一个实例里，有任何无用日志频繁打印，都会把日志覆盖掉</p>
<p>那其实，治理的办法也很简单：</p>]]></description>
</item></channel>
</rss>
