<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Android - 标签 - 北邙山之光的 Blog</title>
        <link>http://PTrain666.github.io/tags/Android/</link>
        <description>Android - 标签 - 北邙山之光的 Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 30 May 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://PTrain666.github.io/tags/Android/" rel="self" type="application/rss+xml" /><item>
    <title>再看 Kotlin Coroutines</title>
    <link>http://PTrain666.github.io/posts/%E5%86%8D%E7%9C%8B-Kotlin-Coroutines/</link>
    <pubDate>Sun, 30 May 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/%E5%86%8D%E7%9C%8B-Kotlin-Coroutines/</guid>
    <description><![CDATA[前言 https://www.youtube.com/watch?v=Mj5P47F6nJg 这个演讲太棒了，演讲人是 Roman Elizarov - Project Lead for the Kotlin Programming Language 按照他的 PPT 我自己总结了一下 Kotlin Coroutines Design Story 首先 kotlin 的协程库 = 线程池 + 任务调度，但是这个调度过程比较复]]></description>
</item><item>
    <title>好玩的 Kotlin</title>
    <link>http://PTrain666.github.io/posts/%E5%A5%BD%E7%8E%A9%E7%9A%84-Kotlin/</link>
    <pubDate>Wed, 12 May 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/%E5%A5%BD%E7%8E%A9%E7%9A%84-Kotlin/</guid>
    <description><![CDATA[​ 前言 又好久好久没更新了，主要是最近研究的东西对我来说都比较难，内功不够 的情况下，写不出东西来。 C/C++ 被我暂时搁置了 最近本来是打算捡起来 C++ 的(也]]></description>
</item><item>
    <title>给你科普科普跨端</title>
    <link>http://PTrain666.github.io/posts/%E7%BB%99%E4%BD%A0%E7%A7%91%E6%99%AE%E7%A7%91%E6%99%AE%E8%B7%A8%E7%AB%AF/</link>
    <pubDate>Sat, 27 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/%E7%BB%99%E4%BD%A0%E7%A7%91%E6%99%AE%E7%A7%91%E6%99%AE%E8%B7%A8%E7%AB%AF/</guid>
    <description><![CDATA[前言 鉴于好多人对于跨端技术觉得玄之又玄，我自己虽然没有实际从0到1的写过跨端框架，但是使用过 Yoga(React-Native 的布局引擎)做过一些简易的跨端的事且后来使用过]]></description>
</item><item>
    <title>一个简单的 RxJava 例子解读</title>
    <link>http://PTrain666.github.io/posts/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84-RxJava-%E4%BE%8B%E5%AD%90%E8%A7%A3%E8%AF%BB/</link>
    <pubDate>Sat, 20 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84-RxJava-%E4%BE%8B%E5%AD%90%E8%A7%A3%E8%AF%BB/</guid>
    <description><![CDATA[前言 RxJava 是一个经常让人出错的库，有的同事第一次接触完全搞不懂，个人感觉是没抓住核心的理念(其实我个人对于 RxJava 是有偏见的)，抓住核心的理念应该会很]]></description>
</item><item>
    <title>ReferenceQueue and Rumtime.gc()</title>
    <link>http://PTrain666.github.io/posts/ReferenceQueue-and-GC/</link>
    <pubDate>Fri, 12 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/ReferenceQueue-and-GC/</guid>
    <description><![CDATA[前言 内存泄漏对于日常简单的业务开发而言 很常见也不常见(如果你还是说 Handler 那一套的话，除非你使用 Handler 做 timer，否则 总有一个时间 会释放所谓的内部类]]></description>
</item><item>
    <title>Handler Looper MQ 的几个问题</title>
    <link>http://PTrain666.github.io/posts/Handler-Looper-MQ-%E7%9A%84%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 04 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/Handler-Looper-MQ-%E7%9A%84%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[前言 Handler、Looper、MessageQueue 是老生常谈的话题了，你可能会觉得没什么好讲的啊，网上文章也一堆。 这里我有几个问题问]]></description>
</item><item>
    <title>MMKV 和 mmap</title>
    <link>http://PTrain666.github.io/posts/MMKV-%E5%92%8C-mmap/</link>
    <pubDate>Fri, 26 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/MMKV-%E5%92%8C-mmap/</guid>
    <description><![CDATA[前言 最近看了点 MMKV 的代码，其核心就是通过 mmap 来读写文件。当然还有多进程、序列化、扩容重排 key等问题(这些随便找篇文章都有讲)。本文主要通过 mmap 实]]></description>
</item><item>
    <title>Bundle Parcel 和 ClassLoader</title>
    <link>http://PTrain666.github.io/posts/Bundle-Parcel-%E5%92%8C-ClassLoader/</link>
    <pubDate>Sat, 20 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/Bundle-Parcel-%E5%92%8C-ClassLoader/</guid>
    <description><![CDATA[前言 前几天看到同事在讨论 动态代理 和 类加载器 的一些问题，其实这些技术无论是客户端还是后端都已经用烂掉了。 动态代理 cglib 和 jdk.Proxy 基本是 Java 后端面试的 &ld]]></description>
</item><item>
    <title>DataBinding 解读</title>
    <link>http://PTrain666.github.io/posts/DataBinding-%E8%A7%A3%E8%AF%BB/</link>
    <pubDate>Thu, 11 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/DataBinding-%E8%A7%A3%E8%AF%BB/</guid>
    <description><![CDATA[前言 Android 的应用层架构，其实一直在缓慢的进步，但是 Android 开发工程师却很少有进步。比如我，直到 2021 年才开始使用 dataBinding。 我初步在 RecyclerView 的 item 中试]]></description>
</item><item>
    <title>再来看 Activity 启动流程</title>
    <link>http://PTrain666.github.io/posts/2020-08-12-%E5%86%8D%E6%9D%A5%E7%9C%8B-Activity-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
    <pubDate>Mon, 07 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2020-08-12-%E5%86%8D%E6%9D%A5%E7%9C%8B-Activity-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
    <description><![CDATA[很久之前的一篇 Activity 启动流程 当时刚毕业，有很多错误和没有理解，今天重新写一篇比较完整的，源码基于 Android 9.0 1.概览 startActivity 流程，主要涉及 APP 进程和 Activi]]></description>
</item></channel>
</rss>
