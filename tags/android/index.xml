<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Android - 标签 - 北邙山之光的 Blog</title>
        <link>http://PTrain666.github.io/tags/Android/</link>
        <description>Android - 标签 - 北邙山之光的 Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 02 Nov 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://PTrain666.github.io/tags/Android/" rel="self" type="application/rss+xml" /><item>
    <title>JVMTI 的运用</title>
    <link>http://PTrain666.github.io/posts/jvmti/</link>
    <pubDate>Wed, 02 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/jvmti/</guid>
    <description><![CDATA[​ 文档 https://source.android.com/docs/core/runtime/art-ti?hl=zh-cn JVMTI 可以做什么 一些重要的功能包括： 重新定义类。 跟踪对象分配和垃圾回收过程。 遵循对象的引用树，遍历堆中的所有对象。 检查 Java 调用堆栈。 暂停（]]></description>
</item><item>
    <title>Baseline Profile</title>
    <link>http://PTrain666.github.io/posts/Baseline-Profile/</link>
    <pubDate>Fri, 14 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/Baseline-Profile/</guid>
    <description><![CDATA[​ Baseline Profile Baseline Profile 可以用于 Andorid 8.0 以上系统的性能优化 原理简单来说还是 dex2oat 那一套东西，但是我们可以自己收集热点代码，生成对应的二进制文件，加速执行 想要使用，]]></description>
</item><item>
    <title>macOS 打包机大小写问题，导致的 crash</title>
    <link>http://PTrain666.github.io/posts/macOS-%E5%A4%A7%E5%B0%8F%E5%86%99%E5%AF%BC%E8%87%B4%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6-crash/</link>
    <pubDate>Thu, 22 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/macOS-%E5%A4%A7%E5%B0%8F%E5%86%99%E5%AF%BC%E8%87%B4%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6-crash/</guid>
    <description><![CDATA[今天遇到了个神奇的问题！ 测试反馈某一个渠道包，运行时 crash，其他渠道包都没问题 因为我们的渠道包的代码本质上是一样的，出现一个包有问题，其]]></description>
</item><item>
    <title>dl_iterate_phdr 的 ANR 问题</title>
    <link>http://PTrain666.github.io/posts/dl_iterate_phdr-%E7%9A%84-ANR-%E9%97%AE%E9%A2%98/</link>
    <pubDate>Sat, 20 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/dl_iterate_phdr-%E7%9A%84-ANR-%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[最近一直在修改一个库，这个库是基于字节开源的 memory-leak-detector 修改的 由于近期增加了一系列的 hook，hook 方法众多，且几乎全量 hook 了所有 so，导致启动时会有]]></description>
</item><item>
    <title>NDK 导致的包体积问题</title>
    <link>http://PTrain666.github.io/posts/NDK-%E5%AF%BC%E8%87%B4%E7%9A%84%E5%8C%85%E4%BD%93%E7%A7%AF%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 11 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/NDK-%E5%AF%BC%E8%87%B4%E7%9A%84%E5%8C%85%E4%BD%93%E7%A7%AF%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[​最近同事在升级 Andorid13 遇到了包体积变化的问题！ 具体问题：分支 A 编译产出 APK 体积为 110M，而基于分支 A 修改代码，适配 了Android13 后，体积为]]></description>
</item><item>
    <title>JNI HOOK</title>
    <link>http://PTrain666.github.io/posts/JNI-Hook/</link>
    <pubDate>Fri, 05 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/JNI-Hook/</guid>
    <description><![CDATA[简介 JNI hook 是指: hook JNIEnv 提供的众多方法 正常来说，是没有这方面的需求的。但是，对于低版本的 Android 存在一些 JNI Local Reference 的溢出，超过 512 个便会触发 crash 所以，最好有一种]]></description>
</item><item>
    <title>pthread 监听</title>
    <link>http://PTrain666.github.io/posts/pthread-%E7%9B%91%E5%90%AC/</link>
    <pubDate>Sat, 23 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/pthread-%E7%9B%91%E5%90%AC/</guid>
    <description><![CDATA[简介 所谓的 native thread，其实就是只我们使用 c/c++ 做开发时，使用的 POSIX 标准的 pthread pthread 函数在 libc 中，而 Android 中使用的是 bionic libc(不是 GNU libc) pthread 常见方法 pthread_create pthread_join pthread_detach pthread_exit pthread_getattr_np]]></description>
</item><item>
    <title>dex 和 mmap</title>
    <link>http://PTrain666.github.io/posts/dex-%E5%92%8C-mmap/</link>
    <pubDate>Wed, 29 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/dex-%E5%92%8C-mmap/</guid>
    <description><![CDATA[​ 背景 最近依葫芦画瓢搞了一个 dex2oat 的优化实验，用于冷启动场景 全量编译的情况下，劣化 400ms，部分编译的情况下有大概 100ms(数据在逐渐缩小)]]></description>
</item><item>
    <title>AGP BuildTools 之间的关系</title>
    <link>http://PTrain666.github.io/posts/AGP-BuildTools-%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/</link>
    <pubDate>Thu, 23 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/AGP-BuildTools-%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/</guid>
    <description><![CDATA[​发现一个有趣的问题： 今天同事突然问我：“你看这个什么情况，我没使用 resGuard 相关的资源混淆的东西啊，打出来的包为什么资源被混淆了？” 因为他们在做 AGP7.0]]></description>
</item><item>
    <title>xv6 macOS 运行环境</title>
    <link>http://PTrain666.github.io/posts/xv6-macOS-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</link>
    <pubDate>Tue, 14 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/xv6-macOS-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</guid>
    <description><![CDATA[​ 前言 oh，技术真的浮躁，也真的没用~~ 来看个有意思的例子： fastjson2 FASTJSON2是FASTJSON项目的重要升级，目标是为 下一个十年 提供一个]]></description>
</item></channel>
</rss>
