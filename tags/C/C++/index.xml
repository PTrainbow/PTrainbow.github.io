<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>C/C&#43;&#43; - 标签 - 北邙山之光的 Blog</title>
        <link>http://PTrainbow.github.io/tags/C/C&#43;&#43;/</link>
        <description>C/C&#43;&#43; - 标签 - 北邙山之光的 Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="http://PTrainbow.github.io/tags/C/C&#43;&#43;/" rel="self" type="application/rss+xml" /><item>
    <title>fp unwind</title>
    <link>http://PTrainbow.github.io/posts/20231127-fp-unwind/</link>
    <pubDate>Mon, 27 Nov 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/20231127-fp-unwind/</guid>
    <description><![CDATA[为了公司内部写一篇软文，所以这篇文章重写了一下~~ 正文 今天给大家分享一种 arm64 平台下栈回溯的方式 —— fp(frame pointer) 回溯，同时会介绍一些基础概念和实现原理 首]]></description>
</item><item>
    <title>ToyJVM 学习</title>
    <link>http://PTrainbow.github.io/posts/ToyJVM-%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Wed, 23 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/ToyJVM-%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[前段时间看了下 Elk(十分简单的 JS VM，其实算是个 parser + interpreter 吧)的代码，学到了一些计算机基础的东西。 比如，我写代码这么久，甚至不知道 double 的内存结构]]></description>
</item><item>
    <title>Elk JSEngine 学习</title>
    <link>http://PTrainbow.github.io/posts/Elk-JSEngine-%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Sat, 19 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/Elk-JSEngine-%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[一直想学习一下如何写一个 VM，但是苦于各种成熟 VM 代码量庞大，阅读困难，无从学起 即使 lua 的古老版本的代码，对于我这种没有任何编译背景和语言设计背]]></description>
</item><item>
    <title>Accelerate C&#43;&#43; Chapter01</title>
    <link>http://PTrainbow.github.io/posts/Accelerate-C&#43;&#43;-Chapter01/</link>
    <pubDate>Thu, 30 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrainbow.github.io/posts/Accelerate-C&#43;&#43;-Chapter01/</guid>
    <description><![CDATA[Exercises Exercise 1-1 Are the following definitions valid? Why or why not? const std::string hello = &#34;Hello&#34;; const std::string message = hello + &#34;, world&#34; + &#34;!&#34;; 编译正确。std::string 重写了 + 操作符 Exercise 1-2 Are the following definitions valid? Why or why not? const std::string exclam = &#34;!&#34;; const std::string message =]]></description>
</item></channel>
</rss>
